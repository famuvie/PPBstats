d_tmp = data[,c("year", "location", "germplasm", variable)]
d_pa = droplevels(as.data.frame(with(d_tmp, table(year, location, germplasm))))
p = ggplot(d_pa, aes(x = germplasm, y = location)) + geom_raster(aes(fill = Freq)) + facet_grid(year ~ .)
p = p + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle(paste("GxE combinaisons per year for", variable))
return(p)
}
OUT = lapply(vec_variables, fun, data)
names(OUT) = vec_variables
OUT
library("moments")
library("agricolae")
library("reshape2")
out = AMMI(data_2016, vec_variables[1])
a = agricolae::AMMI(data_2016$location, data_2016$germplasm, data_2016$block, data_2016$prod_total_noncomm)
b = PPBstats::AMMI(data_2016, vec_variables[2])
b$AMMI$prod_total_noncomm$model$interaction_matrix
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
b = PPBstats::AMMI(data_2016, vec_variables[2])
b$AMMI$prod_total_noncomm$model$interaction_matrix
a = b$AMMI$prod_total_noncomm$model$interaction_matrix
apply(a,2,sum)
a
is.datz.frame(a)
is.data.frame(a)
as.data.frame(a)
apply(as.data.frame(a),2,sum)
apply(as.data.frame(a),2,sum, na.omit = TRUE)
apply(as.data.frame(a),2,sum, na.rm = TRUE)
apply(as.data.frame(a),2,sum, na.rm = TRUE)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
b = PPBstats::AMMI(data_2016, vec_variables[2])
a = b$AMMI$prod_total_noncomm$model$interaction_matrix
a
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
a = b$AMMI$prod_total_noncomm$model$interaction_matrix
a
b = PPBstats::AMMI(data_2016, vec_variables[2])
a = b$AMMI$prod_total_noncomm$model$interaction_matrix
a
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
b = PPBstats::AMMI(data_2016, vec_variables[2])
a = b$AMMI$prod_total_noncomm$model$interaction_matrix
a
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
b = PPBstats::AMMI(data_2016, vec_variables[2])
a = b$AMMI$prod_total_noncomm$model$interaction_matrix
a
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
b = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
b = AMMI(data_2016, vec_variables[2])
c(-268.18750, -272.8125, 271.3125)
c(-268.18750, -272.8125, 271.3125) - 100
c(-268.18750, -272.8125, 271.3125) + 100
sum(-268.18750, -272.8125, 271.3125)
0-sum(-268.18750, -272.8125, 271.3125)
(0-sum(-268.18750, -272.8125, 271.3125))/3
a = sum(-268.18750, -272.8125, 271.3125)
a
(0-a)/3
a + (0-a)/3
a + ((0-a)/3)
a - ((0-a)/3)
*
a
a
x = 0 - a
x
x/3
a = c(-268.18750, -272.8125, 271.3125)
x = 0 - sum(a)
a
a+x
a+x/3
sum(a+x/3)
AMMI
agricolae::AMMI()
agricolae::AMMI
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
c(TRUE, TRUE) & c(FALSE, TRUE)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
c(TRUE, TRUE) & c(FALSE, TRUE)
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
FALSE & FALSE
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
FALSE & FALSE
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
TRUE | FALSE
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
TRUE | FALSE
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[2])
library(devtools)
library(roxygen2)
devtools::document()
devtools::load_all() # ctrl shit L
data = read.csv("/home/pierre/Desktop/2016_mesures-productivite_globale.csv", sep = "\t", header = TRUE)
data$germplasm = as.factor(sapply(data$id_seed_lot_sown, function(x){unlist(strsplit(as.character(x),"_"))[1]}))
data$location = as.factor(sapply(data$id_seed_lot_sown, function(x){unlist(strsplit(as.character(x),"_"))[2]}))
data$year = as.factor(sapply(data$id_seed_lot_sown, function(x){unlist(strsplit(as.character(x),"_"))[3]}))
vec_variables = c("prod_total_comm", "prod_total_noncomm")
fun = function(variable, data){
d_tmp = data[,c("year", "location", "germplasm", variable)]
d_pa = droplevels(as.data.frame(with(d_tmp, table(year, location, germplasm))))
p = ggplot(d_pa, aes(x = germplasm, y = location)) + geom_raster(aes(fill = Freq)) + facet_grid(year ~ .)
p = p + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle(paste("GxE combinaisons per year for", variable))
return(p)
}
OUT = lapply(vec_variables, fun, data)
names(OUT) = vec_variables
OUT
data_2016 = droplevels(filter(data, year == 2016))
library("moments")
library("agricolae")
library("reshape2")
out = AMMI(data_2016, vec_variables[1])
out = AMMI(data_2016, vec_variables[1])
AMMI
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables[1])
out$AMMI$prod_total_comm
?melt
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
matrix = matrix^2
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
out
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
out$AMMI
out$AMMI$prod_total_comm$model$anova_model
out$AMMI$prod_total_comm$model$germplasm_effects
out$AMMI$prod_total_comm$model$location_effects
out$AMMI$prod_total_comm$model$interaction_matrix
out$AMMI$prod_total_comm$model
out$AMMI$prod_total_comm$model$anova_model
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
out = AMMI(data_2016, vec_variables[1])
out$AMMI$prod_total_comm$model$interaction_matrix
a = agricolae::AMMI(data_2016$location, data_2016$germplasm, data_2016$block, data_2016$prod_total_comm)
a
out$AMMI$prod_total_comm$model$interaction_matrix
plot(a)
as.data.frame(a$genXenv)
as.matrix(a$genXenv)
unlist(a$genXenv)
str(a$genXenv)
out$AMMI$prod_total_comm$model$interaction_matrix
plot(a)
edit(data_2016)
colnames(data_2016)
plot1
plot1 = function(data, variable){
vec = colnames(data)[grep(variable, colnames(data))]
vec_var = vec[seq(1, length(vec), 2)]
vec_date = vec[seq(2, length(vec), 2)]
d = NULL
for(i in 1:length(vec_var)){
dtmp = data[, c("location", "year", "germplasm", "block", "X", "Y", vec_var[i], vec_date[i])]
colnames(dtmp) = c("location", "year", "germplasm", "block", "X", "Y", variable, "date")
d = rbind.data.frame(d, dtmp)
}
d$variété = as.factor(d$variété)
d$date = as.factor(d$date)
colnames(d)[which(colnames(d) == variable)] = "variable"
d$variable = as.numeric(as.character(d$variable))
# boxplot
p1 = ggplot(data = d, aes(x = date, y = variable, fill = variété))
p1 = p1 + geom_boxplot()
# interaction plot
p2 = ggplot(d, aes(y = variable, x = date, colour = variété, group = variété))
p2 = p2 + stat_summary(fun.y = mean, geom = "point") + stat_summary(fun.y = mean, geom = "line")
out = list("boxplot" = p1, "interaction_plot" = p2)
return(out)
}
plot1(data_2016, vec_variables[1])
data = data_2016
variable = vec_variables[1]
vec = colnames(data)[grep(variable, colnames(data))]
vec_var = vec[seq(1, length(vec), 2)]
vec_date = vec[seq(2, length(vec), 2)]
vec
vec = colnames(data)[grep(variable, colnames(data))]
vec
colnames(data)
vec_variables = c("Fruit_comm_nb", "Fruit_noncomm_nb")
plot1(data_2016, vec_variables[1])
variable = vec_variables
variable = vec_variables[1]
variable
vec = colnames(data)[grep(variable, colnames(data))]
vec
vec_var = vec[seq(1, length(vec), 2)]
vec_date = vec[seq(2, length(vec), 2)]
d = NULL
for(i in 1:length(vec_var)){
dtmp = data[, c("location", "year", "germplasm", "block", "X", "Y", vec_var[i], vec_date[i])]
colnames(dtmp) = c("location", "year", "germplasm", "block", "X", "Y", variable, "date")
d = rbind.data.frame(d, dtmp)
}
d$variété = as.factor(d$variété)
d$variété = as.factor(d$germplasm)
d$date = as.factor(d$date)
colnames(d)[which(colnames(d) == variable)] = "variable"
d$variable = as.numeric(as.character(d$variable))
# boxplot
p1 = ggplot(data = d, aes(x = date, y = variable, fill = variété))
p1 = p1 + geom_boxplot()
# interaction plot
p2 = ggplot(d, aes(y = variable, x = date, colour = variété, group = variété))
p2 = p2 + stat_summary(fun.y = mean, geom = "point") + stat_summary(fun.y = mean, geom = "line")
p2
p1 = p1 + geom_boxplot() + facet_grid(~. location)
p1 = p1 + geom_boxplot() + facet_grid(location ~.)
p1
p2 = p2 + facet_grid(location ~.)
p2
library(devtools)
library(roxygen2)
devtools::document()
data = read.csv("/home/pierre/Desktop/2016_mesures-productivite_globale.csv", sep = "\t", header = TRUE)
data$germplasm = as.factor(sapply(data$id_seed_lot_sown, function(x){unlist(strsplit(as.character(x),"_"))[1]}))
data$location = as.factor(sapply(data$id_seed_lot_sown, function(x){unlist(strsplit(as.character(x),"_"))[2]}))
data$year = as.factor(sapply(data$id_seed_lot_sown, function(x){unlist(strsplit(as.character(x),"_"))[3]}))
vec_variables = c("prod_total_comm", "prod_total_noncomm")
fun = function(variable, data){
d_tmp = data[,c("year", "location", "germplasm", variable)]
d_pa = droplevels(as.data.frame(with(d_tmp, table(year, location, germplasm))))
p = ggplot(d_pa, aes(x = germplasm, y = location)) + geom_raster(aes(fill = Freq)) + facet_grid(year ~ .)
p = p + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle(paste("GxE combinaisons per year for", variable))
return(p)
}
OUT = lapply(vec_variables, fun, data)
names(OUT) = vec_variables
data_2016 = droplevels(filter(data, year == 2016))
library("moments")
library("agricolae")
library("reshape2")
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
out
out$AMMI$prod_total_comm
library(car)
?levene.test
?bartlett.test
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
?fligner.test
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
out$AMMI$prod_total_comm
out$AMMI$prod_total_comm
out$AMMI$prod_total_comm$model$variability_repartition$data
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
out$AMMI$prod_total_comm
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out$AMMI$prod_total_comm
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables)
out = AMMI(data_2016, vec_variables[1])
out
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI.R')
out = AMMI(data_2016, vec_variables[1])
out
a = agricolae::AMMI(data_2016$location, data_2016$germplasm, data_2016$block, data_2016$prod_total_comm)
plot(a)
a$analysis
a$ANOVA
a$genXenv
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
source('~/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats/R/AMMI_called_functions.R')
out = AMMI(data_2016, vec_variables[1])
ou
out
library(sensominer)
install.packages("sensomineR")
install.packages("SensoMineR")
library(SensoMineR)
?SensoMineR
??SensoMineR
library(devtools)
library(roxygen2)
devtools::document()
data("data_version")
data_version
?MC
library(devtools)
library(roxygen2)
devtools::document()
devtools::load_all() # ctrl shit L
germ = env = 'etre'
warning("Estimated value for", germ, "in", env, "is not possible. This is because the estimation of", germ,"and/or", env, "was not in the MCMC because of lack of convergence.")
{ warning("Estimated value for ", germ, " in ", env, " is not possible. This is because the estimation of ", germ, " and/or ", env, " was not in the MCMC because of lack of convergence.") }
{ warning("Estimated value for germplasm ", germ, " in environment ", env, " is not possible. This is because the estimation of ", germ, " and/or ", env, " was not in the MCMC because of lack of convergence.") }
{ warning("Estimated value for germplasm ", germ, " in environment ", env, " is not possible. This is because the estimation of germplasm and or environment effect did not converge and therefore were not in the MCMC.") }
setwd("./vignettes/")
system("mkdir data_PPBstats")
system("cp -r /home/pierre/Documents/geek/R-stats/Rdev/R_package_PPBstats/PPBstats_data/*RData ./data_PPBstats")
load("data_PPBstats/out2.RData")
comp.alpha = get.mean.comparisons(out2$MCMC, "alpha")
comp.theta = get.mean.comparisons(out2$MCMC, "theta")
comp.beta = get.mean.comparisons(out2$MCMC, "beta", type = 2, threshold = 1)
comp.alpha
names(comp.alpha)
comp.alpha$mean.comparisons
comp.alpha$mean.comparisons
comp.beta$mean.comparisons
comp.alpha$mean.comparisons
comp.beta$mean.comparisons
head(comp.beta$mean.comparisons)
comp.alpha = get.mean.comparisons(out2$MCMC, "alpha")
comp.beta = get.mean.comparisons(out2$MCMC, "beta")
a = comp.alpha$mean.comparisons
b = comp.beta$mean.comparisons
head(b)
gsub(a$parameter, "alpha, "")
)
gsub(a$parameter, "alpha", "")
gsub("alpha", "", a$parameter)
a$germplasm = gsub("alpha", "", a$parameter)
b$germplasm = gsub("beta", "", a$parameter)
ab = join(a, b, germplasm)
gsub("alpha", "", a$parameter)
a = comp.alpha$mean.comparisons
a$germplasm = gsub("alpha", "", a$parameter)
b = comp.beta$mean.comparisons
b$germplasm = gsub("beta", "", a$parameter)
ab = join(a, b, germplasm)
ab = join(a, b, "germplasm")
head(ab)
a = comp.alpha$mean.comparisons
a$germplasm = gsub("alpha", "", a$parameter)
colnames(a)[which(colnames(a) == "parameter")] = "parameter_a"
b = comp.beta$mean.comparisons
a = comp.alpha$mean.comparisons
a$germplasm = gsub("alpha", "", a$parameter)
colnames(a)[which(colnames(a) == "parameter")] = "parameter_a"
b = comp.beta$mean.comparisons
b$germplasm = gsub("beta", "", a$parameter)
colnames(b)[which(colnames(b) == "parameter")] = "parameter_b"
ab = join(a, b, "germplasm")
head(ab)
edit(ab)
a = comp.alpha$mean.comparisons
a$germplasm = gsub("alpha", "", a$parameter)
colnames(a)[which(colnames(a) == "parameter")] = "parameter_a"
b = comp.beta$mean.comparisons
b$germplasm = gsub("beta", "", b$parameter)
colnames(b)[which(colnames(b) == "parameter")] = "parameter_b"
ab = join(a, b, "germplasm")
head(ab)
edit(ab)
head(ab)
a = comp.alpha$mean.comparisons
a$germplasm = gsub("alpha", "", a$parameter)
colnames(a)[which(colnames(a) == "parameter")] = "parameter_a"
colnames(a)[which(colnames(a) == "median")] = "alpha_i"
b = comp.beta$mean.comparisons
b$germplasm = gsub("beta", "", b$parameter)
colnames(b)[which(colnames(b) == "parameter")] = "parameter_b"
colnames(b)[which(colnames(b) == "median")] = "beta_i"
ab = join(a, b, "germplasm")
p = ggplot(ab, aes(x = alpha_i, y = beta_i, label = germplasm)) + geom_point() + geom_text()
p
ab = join(a, b, "germplasm")
ab$germplasm = gsub("\\[", "", b$parameter)
ab$germplasm = gsub("\\]", "", b$parameter)
head(ab)
a = comp.alpha$mean.comparisons
a$germplasm = gsub("alpha", "", a$parameter)
colnames(a)[which(colnames(a) == "parameter")] = "parameter_a"
colnames(a)[which(colnames(a) == "median")] = "alpha_i"
b = comp.beta$mean.comparisons
b$germplasm = gsub("beta", "", b$parameter)
colnames(b)[which(colnames(b) == "parameter")] = "parameter_b"
colnames(b)[which(colnames(b) == "median")] = "beta_i"
ab = join(a, b, "germplasm")
head(ab)
ab$germplasm = gsub("\\[", "", ab$parameter)
ab$germplasm = gsub("\\]", "", ab$parameter)
ab = join(a, b, "germplasm")
gsub("\\[", "", ab$parameter)
ab$parameter
ab = join(a, b, "germplasm")
ab$germplasm = gsub("\\[", "", ab$germplasm)
ab$germplasm = gsub("\\]", "", ab$germplasm)
head(ab)
p = ggplot(ab, aes(x = alpha_i, y = beta_i, label = germplasm)) + geom_point() + geom_text()
p
